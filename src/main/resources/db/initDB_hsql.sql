DROP TABLE user IF EXISTS;
DROP TABLE restaurant IF EXISTS;
DROP TABLE dish IF EXISTS;
DROP TABLE day_menu IF EXISTS;
DROP TABLE user_vote IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE user
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  email            VARCHAR(255)            NOT NULL,
  password         VARCHAR(255)            NOT NULL,
  registered       TIMESTAMP DEFAULT now() NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE    NOT NULL,
  isAdmin          BOOLEAN DEFAULT FALSE   NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON USER (email);

CREATE TABLE restaurant
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL
);

CREATE TABLE dish
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  price            DOUBLE                  NOT NULL
);

CREATE TABLE day_menu
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurant_id    INTEGER                 NOT NULL,
  dish_id          INTEGER                 NOT NULL,
  date             DATE                    NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANT (id) ON DELETE CASCADE,
  FOREIGN KEY (dish_id) REFERENCES DISH (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX daymenu_unique_restaurant_dish_date_idx ON day_menu (restaurant_id, dish_id, date);

CREATE TABLE user_vote
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  user_id          INTEGER                 NOT NULL,
  restaurant_id    INTEGER                 NOT NULL,
  datetime             TIMESTAMP DEFAULT now() NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANT (id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES USER (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX uservote_unique_restaurant_user_date_idx ON user_vote (restaurant_id, user_id, datetime);



